# -*- coding: utf-8 -*-
"""
Created on Mon Nov 11 15:49:34 2024

@author: rodri
"""

from eos_database import *
from casadi import *
from numpy import exp, log, array, roots, isnan, fromstring
from scipy.optimize import fsolve
from species_builder import R, Species, Mixture

list_maintain = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 27, 28, 29, 30]

#mudar o AIJ arquivo do matlab

A = [[-12.98,-1.7675,39.4889,30.903,67.721,64.25,63.198,74.513,71.41,126.507,0.00000000497872,0.00000000733469,0.00000000410848,0.0000000066763,0.0000000239668,0.00000000923742,0.0000000112262,0.000000000786434,-0.0000000074795,0.0000000128769,0.00000000682246,0.00000000524019,-32.5469,-36.375,-39.81,-43.481,-46.5289,2.888634,-5.7296,0.00000000125255],
     [2.36459,1.1429,0.395,0.1533,0.00854058,-0.131798,-0.0117017,-0.096697,-0.0968949,-0.2701,-0.0652895,-0.0556135,-0.0537062,-0.0547613,-0.0567345,-0.0553483,-0.0561178,-0.0575014,-0.0580973,-0.056861,-0.0576885,-0.07921,0.2843,0.2908,0.2963,0.303499,0.3086,0.9827466,1.9145,0.618139],
     [-0.00213247,-0.0003236,0.00211409,0.00263479,0.00327699,0.003541,0.0033164,0.00347649,0.003473,0.00399829,0.00340288,0.00337665,0.00337144,0.00337268,0.0033764,0.0033723,0.00337318,0.00337633,0.00337688,0.00337355,0.00337415,0.00343135,0.0028624,0.0028633,0.002864,0.00286449,0.0028654,0.00009714241,-0.00039574,0.000484485],
     [0.0000056618,0.0000042431,0.000000396486,0.0000000727226,-0.00000110968,-0.0000013332,-0.0000011705,-0.0000013212,-0.0000013302,-0.000001973,-0.00000125345,-0.00000123882,-0.00000123662,-0.00000124201,-0.00000124967,-0.00000124726,-0.00000125103,-0.00000125675,-0.00000125882,-0.00000125642,-0.00000126001,-0.0000013177,-0.000000706426,-0.000000707176,-0.000000707916,-0.000000708416,-0.000000709045,-0.0000000004157947,0.000000876206,-0.000000149353],
     [-0.00000000372476,-0.00000000339316,-0.000000000667176,-0.000000000727896,0.000000000176646,0.000000000251446,0.000000000199636,0.000000000252365,0.000000000255766,0.000000000622796,0.000000000200955,0.000000000198716,0.000000000197836,0.000000000199451,0.000000000202038,0.000000000201377,0.000000000202432,0.000000000204254,0.000000000205021,0.000000000204138,0.000000000205295,0.000000000223681,0,0,0,0,0,-0.000000000003655484,-0.000000000495055,0.000000000022905],
     [0.000000000000860896,0.000000000000882096,0.000000000000167936,0.000000000000236736,-6.39926E-15,-1.29576E-14,-8.66485E-15,-1.34666E-14,-1.37726E-14,-9.38135E-14,-2.23759E-23,-3.70139E-23,-2.08778E-23,-3.4102E-23,-1.34792E-22,-4.4377E-23,-6.29863E-23,-2.46365E-24,4.21753E-23,-6.96619E-23,-3.35504E-23,-2.72426E-23,0,0,0,0,0,4.050133E-16,0.000000000000103846,-1.37045E-15],
     [31.35,44.0103,52.3785,58.7845,66.945,66.7563,63.3315,70.4265,78.3285,86.997,111.977,123.136,121.162,125.191,14.1201,143.577,152.638,225.023,14.1361,14.1069,14.1381,196.75,133.88,147.4,212.92,204.51,152.24,35.4113,65.9278,133.62],
     [-1307.52,-2568.82,-3490.55,-4136.68,-4604.09,-5059.18,-5117.78,-6055.6,-6947,-7890.6,-9558.5,-10635.2,-11079.2,-11737,-3892.9,-13893.7,-14762.2,-18736.5,-4294.53,-4361.79,-4450.43,-19441,-17129,-18406,-21841,-21711,-19976,-966.243,-7227.53,-4735],
     [0,0,0,0,0,0,0,0,0,0,0,0,0,0,-98.93,0,0,0,-124,-129.899,-135.5,0,0,0,0,0,0,0,0,0],
     [-3.26134,-4.97635,-6.10875,-7.01666,-8.25491,-8.08935,-7.48305,-8.37865,-9.44866,-10.6255,-14.2702,-15.8051,-15.3772,-15.8737,0,-18.2992,-19.5485,-30.231,0,0,0,-25.525,-15.87,-17.694,-27.531,-26.255,-18.161,-4.31849,-7.17695,-21.267],
     [0.000029418,0.0000146447,0.0000111869,0.0000103662,0.0000115706,0.00000925395,0.00000776606,0.00000661666,0.00000647481,0.00000647441,0.00000846031,0.00000864176,0.00000759021,0.00000729968,0,0.00000736401,0.00000764105,0.0000138881,0,0,0,0.0000088382,3.5456E-18,3.9369E-18,0.0000084197,0.0000077485,3.0543E-18,0.000079319,0.0000040313,0.040908],
     [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,6,6,2,2,6,2,2,1],
     [16.0429000854492,30.0699005126953,44.0970001220703,58.1240005493164,58.1240005493164,72.1510009765625,72.1510009765625,86.1779022216797,100.205001831055,114.232002258301,128.259002685547,142.285003662109,156.313003540039,170.339004516602,184.367004394531,198.380004882813,212.410003662109,226.429000854492,240.457000732422,254.47900390625,268.510009765625,282.540008544922,296.5830078125,310.588012695313,324.609008789063,338.639007568359,352.670013427734,28.0130004882813,18.015100479126,44.0097007751465],
     [-161.525,-88.5999969482422,-42.1019958496094,-11.7299865722656,-0.501989746093727,27.8780151367188,36.0590148925781,68.7300048828125,98.4290100097656,125.670007324219,150.817010498047,174.149011230469,195.890008544922,216.278009033203,235.429010009766,253.508020019531,270.618005371094,286.790002441406,302.149011230469,316.709008789063,330.649011230469,343.779016113281,356.500024414063,368.610009765625,380.219018554688,391.279016113281,401.889001464844,-195.800199890137,99.9980102539063,-78.5519927978515],
     [299.394012451172,355.683013916016,506.678009033203,561.966003417969,583.223022460938,623.442016601563,629.72900390625,662.664001464844,686.815002441406,705.377014160156,720.247009277344,732.721008300781,742.846008300781,751.14501953125,758.814025878906,762.913024902344,770.405029296875,775.481018066406,780.192016601563,784.093017578125,787.591003417969,790.669006347656,794.302001953125,796.752014160156,799.906005859375,801.359008789063,803.414001464844,806.3740234375,997.986022949219,825.335021972656],
     [-82.4509948730469,32.2780090332031,96.7480102539063,134.946008300781,152.049005126953,187.248010253906,196.450006103516,234.748010253906,267.008020019531,295.448022460938,321.448022460938,344.448022460938,365.149011230469,385.149011230469,402.649011230469,420.85,433.85,443.85,460.219995117188,472.110009765625,482.779016113281,494.85,504.85,513.85,522.85,530.85,538.85,-146.955999755859,374.149011230469,30.9500061035156],
     [4640.68017578125,4883.85009765625,4256.66015625,3647.6201171875,3796.6201171875,3333.59008789063,3375.1201171875,3031.6201171875,2736.78002929688,2496.6201171875,2300.07006835938,2107.55004882813,1964.93005371094,1829.92004394531,1723.53002929688,1620.18005371094,1516.81005859375,1420.56005859375,1316.90002441406,1213.46997070313,1116.94995117188,1160,1110,1060,1020,980,950,3394.3701171875,22120,7370],
     [0.0989999026060104,0.148000001907349,0.200000002980232,0.263000011444092,0.254990011453629,0.30799001455307,0.310990005731583,0.368000000715256,0.425980001688004,0.486000001430511,0.542990028858185,0.601970016956329,0.660000026226044,0.712970018386841,0.779990017414093,0.829990029335022,0.879980027675629,0.939970016479492,1.00581002235413,1.07000005245209,1.12999999523163,1.19000005722046,1.24477005004883,1.30113005638123,1.35604000091553,1.41112005710602,1.46473002433777,0.0900000035762787,0.0571000017225742,0.0939000025391579],
     [0.0114984000101686,0.0986000001430511,0.152400001883507,0.184790000319481,0.20100000500679,0.222240000963211,0.253890007734299,0.300700008869171,0.349790006875992,0.401800006628036,0.445490002632141,0.488480001688004,0.535000026226044,0.561990022659302,0.623000025749207,0.679000020027161,0.705990016460419,0.764980018138885,0.769990026950836,0.800000011920929,0.827000021934509,0.906877994537354,0.942004024982452,0.972190022468567,1.02617001533508,1.07102000713348,1.105260014534,0.0399998016655445,0.34400001168251,0.238940000534058]]


A[0].append(0)
A[1].append(0)
A[2].append(0)
A[3].append(0)
A[4].append(0)
A[5].append(0)
A[6].append(A[6][16])
A[7].append(A[7][16])
A[8].append(A[8][16])
A[9].append(A[9][16])
A[10].append(A[10][16])
A[11].append(A[11][16])

A[12].append(479.9548)
A[13].append(A[13][16])
A[14].append(A[14][16])
A[15].append(460.63666667)
A[16].append(1803.07838557)
A[17].append(1.0100906449180775)
A[18].append(0.903)

A = [[A[i][j] for j in list_maintain]
                  for i in range(len(A))]

critical_table = array(A)
    
Aij = [# CH4[1] C2H6[2] C3H8[3] iC4H10[4] nC4H10[5] iC5H12[6] nC5H12[7] nC6H14[8] nC7H16[9] nC8H18[10]	nC9H20[11]  nC10H22[12] nC11H24[13] nC12H26[14] nC14H30[15]  N2[16] H2O[17] CO2[18] C15+[19]
       [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0319,0,0.0937,0],
       [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0388,0,0.1310,0],
       [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0807,0,0.1410,0],
       [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1320,0],
       [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
       [0.0319,0.0388,0.0807,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.022,0],
       [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
       [0.0937,0.1310,0.1410,0.1320,0,0,0,0,0,0,0,0,0,0,0,-0.0220,0,0,0],
       [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]

Aij = array(Aij)

#mudar o kp

kp = [[0.48508,   1.55171,   -0.15613, 0.000000000000000],  #C1
      [0.48508,  1.55171,   -0.15613, 0.000000000000000],  #C2
      [0.48508, 1.55171,   -0.15613, 0.000000000000000],  #C3
      [0.48508,   1.55171,   -0.15613, 0.000000000000000],  #iC4
      [0.48508,   1.55171,   -0.15613, 0.000000000000000],  #nC4
      [0.48508,   1.55171,   -0.15613, 0.000000000000000],  #iC5
      [0.48508,   1.55171,   -0.15613, 0.000000000000000],  #nC5
      [0.48508,   1.55171,   -0.15613, 0.000000000000000],  #C6
      [0.48508,   1.55171,   -0.15613, 0.000000000000000],  #C7
      [0.48508,   1.55171,   -0.15613, 0.000000000000000],  #C8
      [0.48508,   1.55171,   -0.15613, 0.000000000000000],  #C9
      [0.48508,   1.55171,   -0.15613, 0.000000000000000],  #C10
      [0.48508,   1.55171,   -0.15613, 0.000000000000000],  #C11 tava diferente
      [0.48508,   1.55171,   -0.15613, 0.000000000000000],  #C12 dif
      [0.48508,   1.55171,   -0.15613, 0.000000000000000],  #C14 dif
      [0.48508,   1.55171,   -0.15613, 0.000000000000000],  #N2
      [0.48508,   1.55171,   -0.15613, 0.000000000000000],  #H2O
      [0.48508,   1.55171,   -0.15613, 0.000000000000000],  #CO2
      [0.48508,   1.55171,   -0.15613, 0.000000000000000]]  #C15+ dif

# kp = [[0.48508   1.55171   -0.15613, 0.000000000000000]]*30

# CH4	  C2H6	  C3H8	  iC4H10  nC4H10  iC5H12  nC5H12  nC6H14  nC7H16  nC8H18	
# nC9H20  nC10H22 nC11H24 nC12H26 nC14H30  N2 H2O CO2 C15+

list_names  = ["CH4",	  "C2H6",	  "C3H8",	  "iC4H10",  "nC4H10",  "iC5H12",  "nC5H12",  "nC6H14",  "nC7H16",  "nC8H18",	
               "nC9H20",  "nC10H22", "nC11H24", "nC12H26", "nC14H30", "N2", "H2O", "CO2", "C15+"]


# Definir a matriz como uma string para facilitar a entrada
Cps = f""" 
{str(19.25/R)} {str(0.05213*1000/R)} {str((1.197)/R)} {str((-1.132)/R)} 0 0
4.178 -4.427 5.660 -6.651 2.487
3.847 5.131 6.011 -7.893 3.079
3.351 17.883 5.477 -8.099 3.243
5.547 5.536 8.057 -10.571 4.134
1.959 38.191 2.434 -5.175 2.165
7.554 -0.368 11.846 -14.939 5.753
8.831 -0.166 14.302 -18.314 7.124 
9.634 4.156 15.494 -20.066 7.770
10.824 4.983 17.751 -23.137 8.980
12.152 4.575 20.416 -26.777 10.465
13.467 4.139 23.127 -30.477 11.970
-4.671 93.882 -4.334 -1.331 1.317
17.229 -7.242 31.922 -42.322 17.022
18.546 -7.636 34.604 -45.978 18.509
18.375 6.585 32.307 -42.663 16.590
3.539 -0.261 0.007 0.157 -0.099
3.259 1.356 1.502 -2.374 1.056
"""




Cp_matrix = [list(map(float, linha.split())) for linha in Cps.strip().split('\n')]
Cp_matrix.append([0]*5)
Cp_matrix[-1][0] = (21.180+39.747+23.813+25.130+26.447+27.764)/6
Cp_matrix[-1][1] = (8.424-206.152-9.210-9.603-9.998+10.389)/6
Cp_matrix[-1][2] = (39.969+114.814+45.333+48.015+50.697+53.379)/6
Cp_matrix[-1][3] = (-53.290-155.548-60.601-64.256-67.912-71.567)/6
Cp_matrix[-1][4] = (21.482+67.534+24.455+25.942+27.428+28.914)/6


#mudar
def cp_ig_fun_pure(par,T):
    return R*(par[0] + par[1]*T*1e-3 + par[2]*T**2*1e-5 + par[3]*T**3*1e-8 + par[4]*T**4*1e-11)
#mudar
def enthalpy_ig_fun_pure(par,T):
    return R*(par[0]*T + par[1]*T**2/2*1e-3 + par[2]*T**3/3*1e-5 + par[3]*T**4/4*1e-8 + par[4]*T**5/5*1e-11)

def int_h_ig_RT2_dT_fun_pure(par,T):
    return par[0]*log(T) + par[1]*T/2*1e-3 + par[2]*T**2/6*1e-5 + par[3]*T**3/12*1e-8 + par[4]*T**4/20*1e-11


def entropy_ig_fun_pure(par,T):
    return  R*(par[0]*log(T) + par[1]*T*1e-3 + par[2]*T**2/2*1e-5 + par[3]*T**3/3*1e-8 + par[4]*T**4/4*1e-11)

def pvap_fun_pure(par,T):
    return exp(par[0] + par[1]/(T+par[2]) + par[3]*log(T) + par[4]*T**par[5])

def kappa_fun(par,w):
    return par[0] + par[1]*w  + par[2]*w**2 + par[3]*w**3


dipoles = [0]*len(list_names)

# name,MM,Tc,Pc,Vc,omega
list_of_species = [Species(list_names[i], critical_table[12,i], critical_table[15,i]+273.15, 
                           critical_table[16,i], critical_table[17,i], critical_table[18,i]) 
                   for i in range(len(list_names))]

Tcp = MX.sym('Tcp')
wcp = MX.sym('acentricity')

[list_of_species[i].set_cp_ig_function(
    Function('CP_i_IG',[Tcp],[cp_ig_fun_pure(Cp_matrix[i],Tcp)]),
    Function('H_i_IG',[Tcp],[enthalpy_ig_fun_pure(Cp_matrix[i],Tcp)]))
                   for i in range(len(list_of_species))]

list_int_h_ig_dt = [Function('H_i_IG_RT2_dT',[Tcp],[int_h_ig_RT2_dT_fun_pure(Cp_matrix[i],Tcp)]) \
                    for i in range(len(list_of_species))]

[list_of_species[i].set_entropy_ig_function(
    Function('S_i_IG',[Tcp],[entropy_ig_fun_pure(Cp_matrix[i],Tcp)]))
                   for i in range(len(list_of_species))]

[list_of_species[i].set_p_vap_function(
    Function('Pvap',[Tcp],[pvap_fun_pure(critical_table[6:12,i],Tcp)]))
                   for i in range(len(list_of_species))]

[list_of_species[i].set_kappa(
    Function('kappa',[wcp],[kappa_fun(kp[i],wcp)]))
                   for i in range(len(list_of_species))]

[species.evaluate_kappa() for species in list_of_species]

